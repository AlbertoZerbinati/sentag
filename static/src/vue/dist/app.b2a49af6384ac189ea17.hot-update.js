webpackHotUpdate("app",{

/***/ "./src/components/token-manager.js":
/*!*****************************************!*\
  !*** ./src/components/token-manager.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.concat */ \"./node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.index-of */ \"./node_modules/core-js/modules/es.array.index-of.js\");\n/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.map */ \"./node_modules/core-js/modules/es.array.map.js\");\n/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.slice */ \"./node_modules/core-js/modules/es.array.slice.js\");\n/* harmony import */ var core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.splice */ \"./node_modules/core-js/modules/es.array.splice.js\");\n/* harmony import */ var core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.function.name */ \"./node_modules/core-js/modules/es.function.name.js\");\n/* harmony import */ var core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n\n\n\n\n\n\n\n\n\n\nvar TokenManager = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {Array} tokens\n   */\n  function TokenManager(tokens, oldTM) {\n    Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this, TokenManager);\n\n    if (arguments.length == 1) {\n      this.currentID = 0; //univocal identifier\n\n      this.tokens = tokens.map(function (t) {\n        return {\n          type: \"token\",\n          start: t[0],\n          end: t[1],\n          text: t[2]\n        };\n      });\n      this.words = tokens.map(function (t) {\n        return t[2];\n      });\n      this.initialTokens = this.tokens.slice(); //SHALLOW COPY\n    } else {\n      this.currentID = oldTM.currentID; //univocal identifier\n\n      this.tokens = oldTM.tokens;\n      this.words = oldTM.words;\n      this.initialTokens = oldTM.initialTokens; //SHALLOW COPY\n    }\n  }\n  /**\n   * Creates a new token block with the tokens whose starts match the input\n   * parameters\n   *\n   * @param {Number} start 'start' value of the token forming the start of the token block\n   * @param {Number} end 'start' value of the token forming the end of the token block\n   * @param {Number} _class the id of the class to highlight\n   */\n\n\n  Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(TokenManager, [{\n    key: \"addNewBlock\",\n    value: function addNewBlock(_start, _end, _class) {\n      var start = _end < _start ? _end : _start;\n      var end = _end > _start ? _end : _start; //console.log(start);\n      //console.log(end);\n\n      this.recursiveAddNewBlock(start, end, _class, this.tokens); //console.log(this.tokens)\n    }\n  }, {\n    key: \"recursiveAddNewBlock\",\n    value: function recursiveAddNewBlock(start, end, _class, _tokens) {\n      var selectedTokens = null; //livello 0: ci entra solo e sempre per _tokens=this.tokens\n\n      if (Array.isArray(_tokens)) {\n        selectedTokens = []; //pusha tutti i TOKEN e TOKEN-BLOCK di livello 0 selezionati in selectedTokens con chiamate ricorsive sui figli\n\n        var _iterator = Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_tokens),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var child = _step.value;\n            var selected = this.recursiveAddNewBlock(start, end, _class, child);\n            if (selected !== null) selectedTokens.push(selected);\n          } //se qualche TOKEN o TOKEN-BLOCK è stato selezionato -->\n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        if (selectedTokens.length) {\n          //prendo start del primo token selezionato e trovo l'indice a cui corrisponde tra i _tokens\n          var first_token_start = selectedTokens[0].start;\n\n          var first_index = _tokens.map(function (t) {\n            return t.start;\n          }).indexOf(first_token_start); //costruisco nuovo TOKEN-BLOCK coi selectedTokens\n\n\n          var newTokenBlock = {\n            type: \"token-block\",\n            start: selectedTokens[0].start,\n            end: selectedTokens[selectedTokens.length - 1].end,\n            tokens: selectedTokens,\n            label: _class && _class.name ? _class.name : \"Unlabelled\",\n            classId: _class && _class.id ? _class.id : 0,\n            id: this.currentID,\n            backgroundColor: _class && _class.color ? _class.color : null\n          };\n          this.currentID += 1; //rimpiazzo ogni token selezionato col nuovo TOKEN-BLOCK (che li contiene)\n\n          _tokens.splice(first_index, selectedTokens.length, newTokenBlock);\n        }\n      } // selezione INTERO TOKEN-BLOCK, se è token-block non interamente selezionato entrerà nel 4o elseif\n      else if (_tokens.type === \"token-block\" && _tokens.start >= start && _tokens.end <= end) {\n          //console.log(_tokens.start + \" \" + _tokens.end + \" \" + start + \" \" + end)\n          if (start <= _tokens.start && end >= _tokens.end) return _tokens; //console.log(\"tokenblock\")\n        } // selezione TOKEN\n        else if (_tokens.type === \"token\" && _tokens.start >= start && _tokens.start <= end) {\n            //console.log(_tokens.start + \" \" + _tokens.end + \" \" + start + \" \" + end)\n            //console.log(\"token\")\n            return _tokens;\n          } // scansione TOKEN dentro un TOKEN-BLOCK non interamente selezionato\n          else if (Array.isArray(_tokens.tokens)) {\n              //è come al livello 0 ma applicato a _tokens.tokens\n              selectedTokens = [];\n\n              var _iterator2 = Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_tokens.tokens),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var _child = _step2.value;\n\n                  var _selected = this.recursiveAddNewBlock(start, end, _class, _child);\n\n                  if (_selected !== null) selectedTokens.push(_selected);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              if (selectedTokens.length) {\n                var _first_token_start = selectedTokens[0].start;\n\n                var _first_index = _tokens.tokens.map(function (t) {\n                  return t.start;\n                }).indexOf(_first_token_start);\n\n                var _newTokenBlock = {\n                  type: \"token-block\",\n                  start: selectedTokens[0].start,\n                  end: selectedTokens[selectedTokens.length - 1].end,\n                  tokens: selectedTokens,\n                  label: _class && _class.name ? _class.name : \"Unlabelled\",\n                  classId: _class && _class.id ? _class.id : 0,\n                  id: this.currentID,\n                  backgroundColor: _class && _class.color ? _class.color : null\n                };\n                this.currentID += 1;\n\n                _tokens.tokens.splice(_first_index, selectedTokens.length, _newTokenBlock); //per evitare di far aggiungere TOKEN-BLOCK a livelli ricorsivi precedenti, comunico che i tokens sono stati\n                //trasformati in token-blocks settando selectedTokens a null\n\n\n                selectedTokens = null;\n              }\n            } //se selectedTokens = [] --> ritorna null (possibile con livelli successivi allo 0 se TOKEN-BLOCK senza TOKEN selezionati)\n\n\n      if (selectedTokens !== null && !selectedTokens.length) selectedTokens = null; // se TOKEN non selezionato --> return null \n      // se TOKEN-BLOCK non interamente selezionato e senza TOKEN interni selezionati\n      // il valore ritornato da livello 0 (this.tokens) viene ignorato\n\n      return selectedTokens;\n    }\n    /**\n     * Removes a token block and puts back all the tokens in their original position\n     * problema performance RISOLTO\n     *\n     * @param {Number} blockStart 'start' value of the token block to remove\n     * @param {Number} blockEnd 'end' value of the token block to remove\n     */\n\n  }, {\n    key: \"removeBlock\",\n    value: function removeBlock(blockStart, blockEnd) {\n      this.recursiveRemoveBlock(blockStart, blockEnd, this.tokens);\n    }\n  }, {\n    key: \"recursiveRemoveBlock\",\n    value: function recursiveRemoveBlock(blockStart, blockEnd, _tokens) {\n      var selectedBlock = null; // LIVELLO 0\n\n      if (Array.isArray(_tokens)) {\n        var _iterator3 = Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_tokens),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var child = _step3.value;\n\n            if (child.type === \"token-block\") {\n              //per performance: verifico se sia un blocco da rimuovere o se ne contenga solo se è un TOKEN-BLOCK\n              var selected = this.recursiveRemoveBlock(blockStart, blockEnd, child);\n\n              if (selected !== null) {\n                selectedBlock = selected;\n                break; //mi fermo se ho indiviuato il token-block da rimuovere\n              }\n            }\n          } //se ho trovato a questo livello il BLOCK da rimuovere \n\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (selectedBlock !== null) {\n          //ottengo inici per la rimozione\n          var block_start = selectedBlock.start;\n\n          var block_index = _tokens.map(function (t) {\n            return t.start;\n          }).indexOf(block_start); //mi salvo i TOKENS e TOKEN-BLOCK contenuti in modo da aggiungeri singolarmente\n\n\n          var tokens = selectedBlock.tokens; //rimuovo il token block\n\n          _tokens.splice(block_index, 1); //aggiungo i tokens interni, a livello 0 (quidni sovrascivo tranquillamente this.tokens, visto che _tokens è passato per valore)\n\n\n          this.tokens = _tokens.slice(0, block_index).concat(tokens, _tokens.slice(block_index)); //(per performance)\n          //ritorno null... verrà ignorato\n\n          selectedBlock = null;\n        }\n      } //rimozione di questo TOCKEN-BLOCK ad un certo livello innestato >0 --> ritorno il BLOCK così ai livelli richiamanti mi sostituiscono coi miei .tokens\n      else if (_tokens.type === \"token-block\" && _tokens.start === blockStart && _tokens.end === blockEnd) {\n          return _tokens;\n        } //se TOCKEN-BLOCK non è da rimuovere allora mi comporto ricorsivamente, come per LIVELLO 0 ma agendo sui .tokens\n        else if (Array.isArray(_tokens.tokens)) {\n            var _iterator4 = Object(_home_zerbi_Documents_III_anno_tesi_sentag_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_tokens.tokens),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var _child2 = _step4.value;\n\n                if (_child2.type === \"token-block\") {\n                  //(per performance)\n                  var _selected2 = this.recursiveRemoveBlock(blockStart, blockEnd, _child2);\n\n                  if (_selected2 !== null) {\n                    selectedBlock = _selected2;\n                    break;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            if (selectedBlock !== null) {\n              var _block_start = selectedBlock.start;\n\n              var _block_index = _tokens.tokens.map(function (t) {\n                return t.start;\n              }).indexOf(_block_start);\n\n              var _tokens2 = selectedBlock.tokens; //rimuovo il token block\n\n              _tokens.tokens.splice(_block_index, 1); //aggiungo i tokens\n\n\n              _tokens.tokens = _tokens.tokens.slice(0, _block_index).concat(_tokens2, _tokens.tokens.slice(_block_index)); //(per performance)\n\n              selectedBlock = null;\n            }\n          } //LIVELLO 0 ritorna null\n      //LIVELLI innestati non da rimuovere ritornano null\n      //su TOCKEN non viene mai avviata la chiamata ricorsiva\n      //TOCKEN-BLOCK selezionati ritornano prima di questa riga, nel loro elseif\n      //è importante ritornare null in modo che funzionino i controlli su selected\n\n\n      return selectedBlock;\n    }\n    /**\n     * Removes all the tag blocks and leaves only tokens\n     */\n\n  }, {\n    key: \"resetBlocks\",\n    value: function resetBlocks() {\n      this.tokens = this.initialTokens.slice(); //SHALLOW COPY\n    }\n    /**\n     * Exports the tokens and the token blocks as annotations\n     */\n\n  }, {\n    key: \"exportAsAnnotation\",\n    value: function exportAsAnnotation() {\n      var entities = [];\n\n      for (var i = 0; i < this.tokens.length; i++) {\n        if (this.tokens[i].type === \"token-block\") {\n          var b = this.tokens[i];\n          entities.push([b.start, b.end, b.label]);\n        }\n      }\n\n      return entities;\n    }\n  }]);\n\n  return TokenManager;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TokenManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/token-manager.js\n");

/***/ })

})